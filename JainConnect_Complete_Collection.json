{
  "info": {
    "name": "JainConnect Complete API Collection - FIXED",
    "description": "Complete API collection with ALL endpoints - Users, Events, Tithis, Maharajs with Cloudinary image upload - PROPER JSON FORMATTING",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "userEmail",
      "value": "test@jainconnect.com",
      "type": "string"
    },
    {
      "key": "userPassword",
      "value": "password123",
      "type": "string"
    },
    {
      "key": "eventId",
      "value": "",
      "type": "string"
    },
    {
      "key": "tithiId",
      "value": "",
      "type": "string"
    },
    {
      "key": "maharajId",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "üè† Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/",
          "host": ["{{baseUrl}}"],
          "path": [""]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('API is running', function () {",
              "    pm.response.to.have.status(200);",
              "    pm.expect(pm.response.text()).to.include('JainConnect API is live');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "üë§ User Authentication & Management",
      "item": [
        {
          "name": "Register User (with Image)",
          "request": {
            "auth": { "type": "noauth" },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                { "key": "name", "value": "Test User", "type": "text" },
                { "key": "email", "value": "{{userEmail}}", "type": "text" },
                { "key": "password", "value": "{{userPassword}}", "type": "text" },
                { "key": "phone", "value": "+919876543210", "type": "text" },
                { "key": "location", "value": "Mumbai", "type": "text" },
                { "key": "dob", "value": "1990-01-01", "type": "text" },
                { "key": "gender", "value": "Male", "type": "text" },
                { "key": "profileImage", "type": "file", "src": [] }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('User registered successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('success', true);",
                  "    pm.expect(response).to.have.property('token');",
                  "    pm.expect(response).to.have.property('user');",
                  "    ",
                  "    pm.collectionVariables.set('authToken', response.token);",
                  "    pm.collectionVariables.set('userId', response.user._id);",
                  "    ",
                  "    if (response.profileImageUrl) {",
                  "        console.log('‚úÖ Cloudinary Image URL:', response.profileImageUrl);",
                  "        pm.expect(response.profileImageUrl).to.include('cloudinary.com');",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Login User",
          "request": {
            "auth": { "type": "noauth" },
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{userEmail}}\",\n  \"password\": \"{{userPassword}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Login successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('success', true);",
                  "    pm.expect(response).to.have.property('token');",
                  "    ",
                  "    pm.collectionVariables.set('authToken', response.token);",
                  "    pm.collectionVariables.set('userId', response.user._id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Current User Profile",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{authToken}}" }],
            "url": {
              "raw": "{{baseUrl}}/api/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "profile"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Profile retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('success', true);",
                  "    pm.expect(response).to.have.property('user');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Update Profile (with Image)",
          "request": {
            "method": "PUT",
            "header": [{ "key": "Authorization", "value": "Bearer {{authToken}}" }],
            "body": {
              "mode": "formdata",
              "formdata": [
                { "key": "name", "value": "Updated Test User", "type": "text" },
                { "key": "phone", "value": "+919876543211", "type": "text" },
                { "key": "location", "value": "Delhi", "type": "text" },
                { "key": "profileImage", "type": "file", "src": [] }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "profile"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Profile updated successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('success', true);",
                  "    ",
                  "    if (response.profileImageUrl) {",
                  "        console.log('‚úÖ Updated Cloudinary Image URL:', response.profileImageUrl);",
                  "        pm.expect(response.profileImageUrl).to.include('cloudinary.com');",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Upload Profile Photo Only",
          "request": {
            "method": "POST",
            "header": [{ "key": "Authorization", "value": "Bearer {{authToken}}" }],
            "body": {
              "mode": "formdata",
              "formdata": [
                { "key": "profileImage", "type": "file", "src": [] }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/upload-photo",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "upload-photo"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Photo uploaded successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('success', true);",
                  "    pm.expect(response).to.have.property('profileImageUrl');",
                  "    pm.expect(response.profileImageUrl).to.include('cloudinary.com');",
                  "    console.log('‚úÖ Cloudinary Photo URL:', response.profileImageUrl);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Change Password",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Authorization", "value": "Bearer {{authToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"{{userPassword}}\",\n  \"newPassword\": \"newpassword123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/change-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "change-password"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Password changed successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('success', true);",
                  "    pm.collectionVariables.set('userPassword', 'newpassword123');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{authToken}}" }],
            "url": {
              "raw": "{{baseUrl}}/api/users/",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get all users successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('success', true);",
                  "    pm.expect(response).to.have.property('users');",
                  "    pm.expect(response.users).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{authToken}}" }],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            }
          }
        },
        {
          "name": "Get User by Email",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{authToken}}" }],
            "url": {
              "raw": "{{baseUrl}}/api/users/email/{{userEmail}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "email", "{{userEmail}}"]
            }
          }
        },
        {
          "name": "Fix User (Add Password)",
          "request": {
            "auth": { "type": "noauth" },
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{userEmail}}\",\n  \"password\": \"{{userPassword}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/fix-user",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "fix-user"]
            }
          }
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [{ "key": "Authorization", "value": "Bearer {{authToken}}" }],
            "url": {
              "raw": "{{baseUrl}}/api/users/refresh-token",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "refresh-token"]
            }
          }
        }
      ]
    },
    {
      "name": "üéâ Events Management",
      "item": [
        {
          "name": "Create Event",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Jain Festival 2024\",\n  \"city\": \"Mumbai\",\n  \"date\": \"2024-12-25\",\n  \"time\": \"10:00 AM\",\n  \"description\": \"Annual Jain community celebration\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/events/",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Event created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('_id');",
                  "    pm.expect(response).to.have.property('title', 'Jain Festival 2024');",
                  "    pm.collectionVariables.set('eventId', response._id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get All Events",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/events/",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get all events successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Update Event",
          "request": {
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Jain Festival 2024\",\n  \"description\": \"Updated description for the annual celebration\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/events/{{eventId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "{{eventId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Event updated successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('title', 'Updated Jain Festival 2024');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Delete Event",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/events/{{eventId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", "{{eventId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Event deleted successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('message', 'Event deleted successfully');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üìÖ Tithis Management",
      "item": [
        {
          "name": "Create Tithi",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tithi\": \"Ekadashi\",\n  \"date\": \"2024-12-15\",\n  \"description\": \"Fasting day for spiritual purification\",\n  \"city\": \"Mumbai\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/tithis/",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tithis", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Tithi created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('_id');",
                  "    pm.expect(response).to.have.property('tithi', 'Ekadashi');",
                  "    pm.collectionVariables.set('tithiId', response._id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get All Tithis",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/tithis/",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tithis", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get all tithis successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Update Tithi",
          "request": {
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"Updated description for Ekadashi fasting\",\n  \"city\": \"Delhi\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/tithis/{{tithiId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tithis", "{{tithiId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Tithi updated successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('city', 'Delhi');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Delete Tithi",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/tithis/{{tithiId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tithis", "{{tithiId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Tithi deleted successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('message', 'Tithi deleted successfully');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üôè Maharajs Management",
      "item": [
        {
          "name": "Create Maharaj",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Acharya Shri Hemchandracharya\",\n  \"title\": \"Acharya\",\n  \"city\": \"Mumbai\",\n  \"date\": \"2024-12-20\",\n  \"contactInfo\": \"+919876543210\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/maharajs/",
              "host": ["{{baseUrl}}"],
              "path": ["api", "maharajs", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Maharaj created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('_id');",
                  "    pm.expect(response).to.have.property('name', 'Acharya Shri Hemchandracharya');",
                  "    pm.collectionVariables.set('maharajId', response._id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get All Maharajs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/maharajs/",
              "host": ["{{baseUrl}}"],
              "path": ["api", "maharajs", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get all maharajs successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Maharaj by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/maharajs/{{maharajId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "maharajs", "{{maharajId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get maharaj by ID successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('_id');",
                  "    pm.expect(response).to.have.property('name');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Update Maharaj",
          "request": {
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"contactInfo\": \"+919876543211\",\n  \"city\": \"Delhi\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/maharajs/{{maharajId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "maharajs", "{{maharajId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Maharaj updated successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('city', 'Delhi');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Delete Maharaj",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/maharajs/{{maharajId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "maharajs", "{{maharajId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Maharaj deleted successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('message', 'Maharaj deleted successfully');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üö´ Error Testing",
      "item": [
        {
          "name": "Access Protected Route Without Token",
          "request": {
            "auth": { "type": "noauth" },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "profile"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Access denied without token', function () {",
                  "    pm.response.to.have.status(401);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('success', false);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Login with Wrong Password",
          "request": {
            "auth": { "type": "noauth" },
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{userEmail}}\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Login fails with wrong password', function () {",
                  "    pm.response.to.have.status(401);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('success', false);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "console.log('üöÄ Request:', pm.request.method, pm.request.url);",
          "console.log('üîë Token:', pm.collectionVariables.get('authToken') ? 'Present' : 'Not set');"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "pm.test('Response time < 3000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(3000);",
          "});",
          "",
          "if (pm.response.headers.get('Content-Type') && pm.response.headers.get('Content-Type').includes('application/json')) {",
          "    pm.test('Content-Type is JSON', function () {",
          "        pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "    });",
          "}"
        ]
      }
    }
  ]
}
